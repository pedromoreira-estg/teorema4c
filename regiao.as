package  {		import flash.display.MovieClip;	import flash.geom.ColorTransform;	import flash.events.MouseEvent;		// classe de regiao de mapa	public class regiao extends MovieClip {				// array com regioes adjacentes		var adjacencias : Array = new Array();				// cor por defeito		public var cor : uint = regiao.BRANCO;				// constantes com cores		public static const BRANCO		= 0;		public static const VERMELHO 	= 1;		public static const VERDE 		= 2;		public static const AZUL 			= 3;		public static const AMARELO	 	= 4;				// numero de cores (incluindo a cor neutra/vazia)		public static const NCORES		= 5;				// construtor		public function regiao() {			this.setCor(cor);			addEventListener(MouseEvent.CLICK,mudaCor);		}				// muda a cor		public function mudaCor(e:MouseEvent) {			var mycor = this.cor;			mycor++;			mycor = mycor % regiao.NCORES			this.setCor(mycor);			trace(checkConflito());		}				// regista adjacencias		public function setAdjacencias(a) {			adjacencias=a;		}				// mostra adjacencias		public function mostraAdjacencias() {			for each (var adj in adjacencias) {				trace(adj);			}		}				// verifica conflito (sai logo que detectado)		public function checkConflito() {			var conflito : Boolean = false;						if (cor != regiao.BRANCO) {				for each (var adj in adjacencias) {					if (adj.cor == cor) {						trace(adj.name);						conflito = true;						//break;					}				}			}			return(conflito);		}				// muda uma cor através de uma transformação		public function setCor(cor) {			var ct : ColorTransform;			switch (cor) {				case BRANCO :					 ct = new ColorTransform(1,1,1);					break;				case VERMELHO : 					 ct = new ColorTransform(1,0,0);					break;				case VERDE :					 ct = new ColorTransform(0,1,0);					break;				case AZUL :					 ct = new ColorTransform(0,0,1);					break;				case AMARELO :					 ct = new ColorTransform(1,1,0);					break;			}			transform.colorTransform = ct;			this.cor = cor;		}			}	}